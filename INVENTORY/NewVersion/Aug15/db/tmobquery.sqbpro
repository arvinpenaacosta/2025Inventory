<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/DevShared/INVENTORY/TMOB/db/NOC2025A.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2857"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:maininventory"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="inventory" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="5" mode="0"/></sort><column_widths><column index="1" value="71"/><column index="2" value="40"/><column index="3" value="124"/><column index="4" value="139"/><column index="5" value="66"/><column index="6" value="53"/><column index="7" value="71"/><column index="8" value="144"/><column index="10" value="265"/><column index="11" value="195"/><column index="12" value="173"/><column index="13" value="165"/><column index="14" value="287"/><column index="15" value="72"/><column index="16" value="107"/><column index="17" value="112"/><column index="18" value="80"/><column index="19" value="71"/><column index="20" value="82"/><column index="21" value="105"/><column index="22" value="135"/><column index="23" value="96"/><column index="24" value="129"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT 
id, floor, loc1, loc2, log_user, hostname, serial_number, processor, windows_version, windows_display_version, model, total_ram, ram_per_slot, ram_speed, ram_type, ip_address, mac_address, timestamp 
FROM 
inventory;

SELECT 
    id,    floor,    roomname,    loc1,    loc2,    loceam,    log_user,    hostname,    serial_number,    processor,
    windows_version,    windows_display_version,    manufacturer,    model,    total_ram,    num_ram_slots,    ram_per_slot,
    ram_speed,    ram_type,    ip_address,    mac_address,    citrix_name,    citrix_version,    timestamp
FROM inventory;
</sql><sql name="SQL 1 (1)">WITH latest_records AS (
    SELECT 
        id, floor, loc1, loc2, log_user, hostname, serial_number, 
        processor, windows_version, windows_display_version, model, 
        total_ram, ram_per_slot, ram_speed, ram_type, 
        ip_address, mac_address, timestamp,
        ROW_NUMBER() OVER (
            PARTITION BY serial_number 
            ORDER BY timestamp DESC
        ) as rn
    FROM inventory
    WHERE serial_number IS NOT NULL 
    AND serial_number != ''
)
SELECT 
    id, floor, loc1, loc2, log_user, hostname, serial_number, 
    processor, windows_version, windows_display_version, model, 
    total_ram, ram_per_slot, ram_speed, ram_type, 
    ip_address, mac_address, timestamp
FROM latest_records
WHERE rn = 1
ORDER BY serial_number;</sql><sql name="SQL 1 (2)">WITH latest_records AS (
    SELECT 
        id, floor, loc1, loc2, log_user, hostname, serial_number, 
        processor, windows_version, windows_display_version, model, 
        total_ram, ram_per_slot, ram_speed, ram_type, 
        ip_address, mac_address, timestamp,
        ROW_NUMBER() OVER (
            PARTITION BY serial_number 
            ORDER BY timestamp DESC
        ) as rn
    FROM inventory
    WHERE serial_number IS NOT NULL 
    AND serial_number != ''
)
SELECT 
    id, floor, loc1, loc2, log_user, hostname, serial_number, 
    processor, windows_version, windows_display_version, model, 
    total_ram, ram_per_slot, ram_speed, ram_type, 
    ip_address, mac_address, timestamp
FROM latest_records
WHERE rn = 1
ORDER BY floor, loc1, loc2;</sql><sql name="Transaction Count">
SELECT 
    serial_number,
    COUNT(*) AS trans_count
FROM 
    inventory
GROUP BY 
    serial_number
ORDER BY 
    trans_count DESC;

</sql><sql name="Transaction Count (1)">
SELECT loc1, COUNT(*) AS occurrence_count
FROM inventory
GROUP BY loc1
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END;
</sql><sql name="GetLocInv">SELECT 
    loc1, 
    COUNT(*) AS occurrence_count
FROM inventory
GROUP BY loc1
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END;</sql><sql name="ShowLatesLocation">SELECT 
    id, floor, loc1, loc2, log_user, hostname, serial_number, 
    processor, windows_version, windows_display_version, model, 
    total_ram, ram_per_slot, ram_speed, ram_type, 
    ip_address, mac_address, timestamp
FROM inventory
WHERE serial_number IS NOT NULL 
AND serial_number != ''
GROUP BY serial_number
HAVING timestamp = MAX(timestamp)
ORDER BY 

    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END,
	
loc2;</sql><sql name="ShowLatesLocation (1)">WITH latest_inventory AS (
    SELECT *
    FROM inventory AS i
    WHERE serial_number IS NOT NULL
      AND serial_number != ''
      AND timestamp = (
          SELECT MAX(timestamp)
          FROM inventory
          WHERE serial_number = i.serial_number
      )
)
SELECT 
    loc1,
    COUNT(*) AS transaction_count
FROM latest_inventory
GROUP BY loc1
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END;
</sql><sql name="GetDuplicateSerial">SELECT *
FROM inventory
WHERE serial_number IN (
    SELECT serial_number
    FROM inventory
    WHERE serial_number IS NOT NULL AND TRIM(serial_number) != ''
    GROUP BY serial_number
    HAVING COUNT(*) &gt; 1
)
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END;</sql><sql name="GetNon-DuplicateSerial">WITH latest_inventory AS (
    SELECT *
    FROM (
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY serial_number ORDER BY timestamp DESC) AS rn
        FROM inventory
        WHERE serial_number IS NOT NULL AND TRIM(serial_number) != ''
    )
    WHERE rn = 1
)
SELECT *
FROM latest_inventory
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END;
</sql><sql name="GetALL No Filter">SELECT *
FROM inventory
ORDER BY 
    -- Extract prefix for primary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN SUBSTR(loc1, 1, INSTR(loc1, '_'))
        ELSE loc1
    END,
    -- Extract number for secondary sort
    CASE 
        WHEN loc1 LIKE '%_%' AND SUBSTR(loc1, INSTR(loc1, '_') + 1) GLOB '[0-9]*'
        THEN CAST(SUBSTR(loc1, INSTR(loc1, '_') + 1) AS INTEGER)
        ELSE 0
    END,
	
	LOC2;
	</sql><sql name="update values">UPDATE inventory SET loc1 = 'PA_01' WHERE loc1 = 'PA_1';
UPDATE inventory SET loc1 = 'PA_02' WHERE loc1 = 'PA_2';
UPDATE inventory SET loc1 = 'PA_03' WHERE loc1 = 'PA_3';



UPDATE inventory SET loc1 = 'POD_01' WHERE loc1 = 'POD_1';
UPDATE inventory SET loc1 = 'POD_02' WHERE loc1 = 'POD_2';
UPDATE inventory SET loc1 = 'POD_03' WHERE loc1 = 'POD_3';
UPDATE inventory SET loc1 = 'POD_04' WHERE loc1 = 'POD_4';
UPDATE inventory SET loc1 = 'POD_05' WHERE loc1 = 'POD_5';
UPDATE inventory SET loc1 = 'POD_06' WHERE loc1 = 'POD_6';
UPDATE inventory SET loc1 = 'POD_07' WHERE loc1 = 'POD_7';
UPDATE inventory SET loc1 = 'POD_08' WHERE loc1 = 'POD_8';
UPDATE inventory SET loc1 = 'POD_09' WHERE loc1 = 'POD_9';

UPDATE inventory SET loc2 = '01' WHERE loc2 = '1';
UPDATE inventory SET loc2 = '02' WHERE loc2 = '2';
UPDATE inventory SET loc2 = '03' WHERE loc2 = '3';
UPDATE inventory SET loc2 = '04' WHERE loc2 = '4';
UPDATE inventory SET loc2 = '05' WHERE loc2 = '5';
UPDATE inventory SET loc2 = '06' WHERE loc2 = '6';
UPDATE inventory SET loc2 = '07' WHERE loc2 = '7';
UPDATE inventory SET loc2 = '08' WHERE loc2 = '8';
UPDATE inventory SET loc2 = '09' WHERE loc2 = '9';</sql><current_tab id="9"/></tab_sql></sqlb_project>
